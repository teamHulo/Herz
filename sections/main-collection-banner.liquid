{% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
{{ 'component-collection-hero.css' | asset_url | stylesheet_tag }}

{%- style -%}
  @media screen and (max-width: 749px) {
    .collection-hero--with-image .collection-hero__inner {
      padding-bottom: calc({{ settings.media_shadow_vertical_offset | at_least: 0 }}px + 2rem);
    }
  }
{%- endstyle -%}
<div class="container" style="margin-top: 37px;">{% render 'bread-crump' %}</div>
<div class="collection-hero d-none{% if section.settings.show_collection_image and collection.image %} collection-hero--with-image{% endif %} color-{{ section.settings.color_scheme }} gradient">
  <div class="collection-hero__inner {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}">
    <div class="collection-hero__text-wrapper">
      <div class="collection-hero__title-wrap">
        <h2 class="collection-hero__title">
          <span class="visually-hidden">{{ 'sections.collection_template.title' | t }}: </span>
          {{- collection.title | escape -}}
        </h2>
        {%comment%}<div>PAGINATION <span>1-</span><span>2</span></div>{% endcomment %}
      </div>

      {%- if section.settings.show_collection_description -%}
        <div class=" rte">{{ collection.description }}</div>
      {%- endif -%}
    </div>

    {%- if section.settings.show_collection_image and collection.image -%}
      <div class="collection-hero__image-container media gradient">
        <img
          srcset="
            {%- if collection.image.width >= 165 -%}{{ collection.image | image_url: width: 165 }} 165w,{%- endif -%}
            {%- if collection.image.width >= 360 -%}{{ collection.image | image_url: width: 360 }} 360w,{%- endif -%}
            {%- if collection.image.width >= 535 -%}{{ collection.image | image_url: width: 535 }} 535w,{%- endif -%}
            {%- if collection.image.width >= 750 -%}{{ collection.image | image_url: width: 750 }} 750w,{%- endif -%}
            {%- if collection.image.width >= 1070 -%}{{ collection.image | image_url: width: 1070 }} 1070w,{%- endif -%}
            {%- if collection.image.width >= 1500 -%}{{ collection.image | image_url: width: 1500 }} 1500w,{%- endif -%}
            {{ collection.image | image_url }} {{ collection.image.width }}w
          "
          src="{{ collection.image | image_url: width: 750 }}"
          sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc(50vw - 130px), calc(50vw - 55px)"
          alt=""
          width="{{ collection.image.width }}"
          height="{{ collection.image.height }}"
        >
      </div>
    {%- endif -%}
  </div>
</div>

<script>
    let collectionBanner = document.querySelector('.collection-hero');
    // let timer =  setInterval(() => {
    //     console.log('Interval')
    //     let gfGrid = document.querySelector('#gf-grid');
    //     if (gfGrid) {
    //         gfGrid.prepend(collectionBanner);
    //         collectionBanner.classList.remove('d-none');
    //         clearInterval(timer);
    //     }
    // }, 100)
   
</script>
<script>
  function checkedActive(el) {
    if(!!el) {
      el.classList.add('active-filter');
      let ul = el.closest('ul');

      if(!!ul) {
        ul.style.display = 'block';
        let li = ul.closest('li');

        if(!!li) {
          li.classList.remove('is-collapsed');
          checkedActive(ul.closest('li').querySelector('div button'));
        }
      }
    }
  }
  
  function addActiveFilter() {
    let allUl = document.querySelectorAll('.gf-option-box li ul');
    let allLi = document.querySelectorAll('.gf-option-box li');
    allUl.forEach(e => e.style.display = 'none');
    allLi.forEach(e => e.classList.add('is-collapsed'));
    
    let currentItem = document.querySelector('[title="{{ collection.title }}"]');
    checkedActive(currentItem)

    let firstLevelParent = currentItem.closest('[data-filter-type="Collection"]');
    firstLevelParent.querySelector('.gf-block-title').classList.add('active-filter');
    firstLevelParent.classList.remove('is-collapsed');

  }
  // var timerToCheckFilter = setInterval(function() {
  // if (document.body.contains(document.getElementById('gf-tree'))) {
  //         addActiveFilter();
  //         clearInterval(timerToCheckFilter);
  //     }else{
  //         console.log('?');
  //     }
  // }, 500);

</script>

{% schema %}
{
  "name": "t:sections.main-collection-banner.name",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.main-collection-banner.settings.paragraph.content"
    },
    {
      "type": "checkbox",
      "id": "show_collection_description",
      "default": true,
      "label": "t:sections.main-collection-banner.settings.show_collection_description.label"
    },
    {
      "type": "checkbox",
      "id": "show_collection_image",
      "default": false,
      "label": "t:sections.main-collection-banner.settings.show_collection_image.label",
      "info": "t:sections.main-collection-banner.settings.show_collection_image.info"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    }
  ]
}
{% endschema %}
